# 04
# Contracts have separate transient storage.
# Loading a slot in a separate contract after storing returns 0: TSTORE(x, y), CALL(z, ...), TLOAD(x) returns 0
# Storing to a slot in a separate contract does not affect calling contract: TSTORE(x, y), CALL(z, ...), TSTORE(x, f) and original calling contract TLOAD(x) returns y
#
# Expect storage slot 0 of address a to be 10. Ensures that tstore in a different contract doesn't modify calling contract transient storage.
# Expect storage slot 1 of address a to be 1 (successful call).
# Expect storage slot 0 of address b to be 0. Ensures that tload doesn't load the calling contracts transient storage.
# Expect storage slot 1 of address b to be 20. Ensures that tstore did result in a change to the transient storage of a called contract.

04_tloadAfterCall:
  _info:
    comment: Loading a slot after a call to another contract is 0.

  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: 0x20000
    currentNumber: 1
    currentTimestamp: 1000
    currentGasLimit: 0x10000000000000
    currentBaseFee: 10

  pre:
    A00000000000000000000000000000000000000A:
      balance: 1000000000000000000
      nonce: 0
      code: |
        :yul {
          verbatim_2i_0o(hex"5D", 0, 10)
          let success := call(gas(), 0xB00000000000000000000000000000000000000B, 0, 0, 32, 0, 0)
          let val := verbatim_1i_1o(hex"5C", 0)
          sstore(0, val)
          sstore(1, success)
        }
      storage: {}
    B00000000000000000000000000000000000000B:
      balance: 1000000000000000000
      nonce: 0
      code: |
        :yul {
          let val := verbatim_1i_1o(hex"5C", 0)
          sstore(0, val)
          
          verbatim_2i_0o(hex"5D", 0, 20)
          let updated_val := verbatim_1i_1o(hex"5C", 0)
          sstore(1, updated_val)
        }
      storage: { 0x00: 0xffff }
    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: 1000000000000000000000
      code: "0x"
      nonce: 0
      storage: {}

  transaction:
    data:
      - data: 0x
        accessList: []
    gasLimit:
      - "400000"
    nonce: 0
    to: A00000000000000000000000000000000000000A
    value:
      - 0
    secretKey: "45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
    maxPriorityFeePerGas: 0
    maxFeePerGas: 2000

  expect:
    - network:
        - ">=Cancun"
      result:
        A00000000000000000000000000000000000000A:
          storage:
            # expect 1 (successful call) at slot 1
            0x00: 10
            0x01: 1
        B00000000000000000000000000000000000000B:
          storage:
            0x00: 0
            0x01: 20
